##################
# Run unit tests #
##################

[envs.test]
type = "conda"
conda-forge = true
features = [
  "examples",
  "pip-extras",
  "recommended",
  "tests"
]
pre-install-commands = [
  'conda install -y -c conda-forge "nodejs>=16" graphviz xgboost'
]
post-install-commands = [
  "bokeh sampledata",
  "panel bundle --all"
]
[envs.test.scripts]
run-coverage = "pytest panel --cov=./panel --cov-report=xml -n logical --dist loadgroup"
run = "run-coverage --no-cov"
run-examples = [
  'pytest panel --docs',
  'pytest -n logical --dist loadscope --nbval-lax examples/user_guide examples/reference examples/gallery --ignore-glob="*VTK.ipynb" --ignore-glob="*VTKVolume.ipynb" --ignore-glob="*VTK*.ipynb"  --ignore-glob="*Terminal.ipynb" --ignore-glob="*dynamic_tabs.ipynb" --ignore-glob="*xgboost_classifier.ipynb"  --ignore-glob="*clifford_interact.ipynb" --ignore-glob="*NetworkX.ipynb" --ignore-glob="*streaming_videostream.ipynb"'
]

[[envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

################
# Run UI tests #
################

[envs.test-ui]
template = "test"
features = [
  "build",
  "recommended",
  "tests",
  "ui"
]
post-install-commands = [
  "python scripts/build_pyodide_wheels.py",
  "playwright install chromium",
  "panel bundle --all",
]
[envs.test-ui.scripts]
run-coverage = "pytest panel --cov=./panel --cov-report=xml --cov-config=.uicoveragerc --ui --jupyter --browser chromium"
run = "run-coverage --no-cov"
start-jupyter = [
  "jupyter server extension enable panel.io.jupyter_server_extension --sys-prefix",
  "jupyter lab --config panel/tests/ui/jupyter_server_test_config.py --port 8887 &"
]

[[envs.test-ui.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

############
# Docs env #
############

[envs.docs]
type = "conda"
features = [
  "build",
  "doc",
  "examples",
  "recommended"
]
pre-install-commands = [
  'conda install -y -c conda-forge "nodejs>=16" graphviz vtk==9.0.1 xgboost'
]
post-install-commands = [
  "python scripts/build_pyodide_wheels.py",
  "bokeh sampledata",
  "panel bundle --all",
]
[envs.docs.scripts]
generate-rst = "nbsite generate-rst --org holoviz --project-name panel"
refmanual = "python ./doc/generate_modules.py panel -d ./doc/api -n panel -e tests"
build = [
  "nbsite build --what=html --output=builtdocs --org holoviz --project-name panel",
  "cp -r ./panel/dist ./builtdocs/panel_dist"
]
serve = [
  "cd builtdocs",
  "python -m http.server 8000"
]
build-pyodide = "panel convert examples/gallery/**/*.ipynb --to pyodide-worker --out ./builtdocs/pyodide/ --pwa --index"

[[envs.docs.matrix]]
python = ["3.9"]

#####################
# Build JupyterLite #
#####################

[envs.jupyterlite]
dependencies = [
  "jupyter",
  "jupyterlite",
]
[envs.jupyterlite.scripts]
build = [
  "python ./scripts/build_pyodide_wheels.py lite/pypi",
  "python ./scripts/generate_panelite_content.py",
  "jupyter lite build --lite-dir lite --output-dir lite/dist"
]

##################################
# Set up development environment #
##################################

[envs.pip]
features = [
  "all"
]
post-install-commands = [
  "bokeh sampledata",
  "playwright install chromium",
  "pre-commit install",
  "panel bundle --all"
]

[envs.pip.scripts]
bundle = "panel bundle --all"
unit-test = "pytest panel"
ui-test = "pytest panel --ui --jupyter --browser chromium"
lint = "pre-commit run -a"
example-test = [
  'pytest panel --docs',
  'pytest -n logical --dist loadscope --nbval-lax examples/user_guide examples/reference examples/gallery --ignore-glob="*VTK.ipynb" --ignore-glob="*VTKVolume.ipynb" --ignore-glob="*VTK*.ipynb"  --ignore-glob="*Terminal.ipynb" --ignore-glob="*dynamic_tabs.ipynb" --ignore-glob="*xgboost_classifier.ipynb"  --ignore-glob="*clifford_interact.ipynb" --ignore-glob="*NetworkX.ipynb" --ignore-glob="*streaming_videostream.ipynb"'
]
pyodide-wheels = "python scripts/build_pyodide_wheels.py"

[[envs.pip.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[envs.dev]
type = "conda"
conda-forge = true
pre-install-commands = [
  "pip install toml PyYAML",
  'python scripts/generate_conda_yaml.py -c conda-forge pyviz/label/dev -o conda-extras doc examples recommended tests ui -e "nodejs>=16" --pip-only pip-extras',
  "conda env update --file environment.yaml",
]
post-install-commands = [
  "bokeh sampledata",
  "playwright install chromium",
  "pre-commit install",
  "panel bundle --all"
]

[envs.dev.scripts]
bundle = "panel bundle --all"
unit-test = "pytest panel"
ui-test = "pytest panel --ui --jupyter --browser chromium"
lint = "pre-commit run -a"
example-test = [
  'pytest panel --docs',
  'pytest -n logical --dist loadscope --nbval-lax examples/user_guide examples/reference examples/gallery --ignore-glob="*VTK.ipynb" --ignore-glob="*VTKVolume.ipynb" --ignore-glob="*VTK*.ipynb"  --ignore-glob="*Terminal.ipynb" --ignore-glob="*dynamic_tabs.ipynb" --ignore-glob="*xgboost_classifier.ipynb"  --ignore-glob="*clifford_interact.ipynb" --ignore-glob="*NetworkX.ipynb" --ignore-glob="*streaming_videostream.ipynb"'
]
pyodide-wheels = "python scripts/build_pyodide_wheels.py"

[[envs.dev.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]
