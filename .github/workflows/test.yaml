name: pytest
on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'

jobs:
  test_suite:
    name: Pytest on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        exclude:
          - os: windows-latest
            python-version: 3.8
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0} 
    env:
      DESC: "Python ${{ matrix.python-version }} tests"
      PYTHON_VERSION: ${{ matrix.python-version }}
      DISPLAY: ":99.0"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Without this env var `doit env_create ...` uses by default
      # the `pyviz` channel, except that we don't want to configure
      # it as one of the sources.
      PYCTDEV_SELF_CHANNEL: "pyviz/label/dev"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-node@v2
        with:
          node-version: '15.3.0'
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channel-priority: strict
          miniconda-version: "latest"
          mamba-version: "*"
          channels: pyviz/label/dev,bokeh/label/dev,conda-forge,nodefaults
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow
      - name: conda setup
        run: |
          conda update -n base conda
          conda create -n test-environment python=${{ matrix.python-version }} "pyctdev>=0.5"
      - name: nix_opengl
        if: contains(matrix.os, 'ubuntu')
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          sudo apt-get install libglu1-mesa
          conda install mesalib
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24
          sleep 3
      - name: downgrade pip
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda install "pip<21.2.1" 
      - name: doit develop_install < 3.10
        if: matrix.python-version < '3.10'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit develop_install -o examples -o recommended -o tests -o build --conda-mode=mamba
      - name: doit develop_install >= 3.10
        if: matrix.python-version >= '3.10'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit develop_install -o recommended -o tests -o build --conda-mode=mamba
      - name: pip installs
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          pip install pyecharts idom
      - name: bokeh sample data
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          bokeh sampledata
      - name: git describe
        run: git describe
      - name: windows_opengl
        if: contains(matrix.os, 'windows')
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit test_flakes
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_flakes
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit
      - name: test examples
        if: matrix.python-version < '3.10'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_examples
      - name: codecov
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
