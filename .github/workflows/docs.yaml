name: docs

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  pull_request:
    branches:
    - '*'
  workflow_dispatch:
    inputs:
      target:
        description: 'Site to build and deploy'
        type: choice
        options:
        - dev
        - main
        - dryrun
        required: true
        default: dryrun
  schedule:
    - cron: '0 19 * * SUN'

jobs:
  build_docs:
    name: Documentation
    runs-on: 'ubuntu-latest'
    timeout-minutes: 180
    defaults:
      run:
        shell: bash -l {0}
    env:
      DESC: "Documentation build"
      MPLBACKEND: "Agg"
      MOZ_HEADLESS: 1
      DISPLAY: ":99.0"
      PANEL_IPYWIDGET: 1
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "100"
          # Forcing fetch to avoid 'would clobber existing tag', as the previous step
          # fetches tags already.
      - run: git fetch --prune --tags --unshallow --force
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-update-conda: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Set up base environment
        run: |
          pip install --upgrade pip
          pip install hatch hatch-conda
          hatch -v env create docs
      - name: Build docs
        run: |
          hatch -v run docs:generate-rst
          hatch -v run docs:refmanual
          hatch -v run docs:build
          hatch -v run docs:build-pyodide
      - name: Set and echo git ref
        id: vars
        run: |
          echo "Deploying from ref ${GITHUB_REF#refs/*/}"
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Deploy dev
        uses: peaceiris/actions-gh-pages@v3
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'dev') ||
          (github.event_name == 'push' && (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          external_repository: pyviz-dev/panel
          publish_dir: ./builtdocs
          force_orphan: true
      - name: Deploy main
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'main') ||
          (github.event_name == 'push' && !(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./builtdocs
          cname: panel.holoviz.org
          force_orphan: true
  deploy_jupyterlite:
    name: JupyterLite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "100"
          # Forcing fetch to avoid 'would clobber existing tag', as the previous step
          # fetches tags already.
      - run: git fetch --prune --tags --unshallow --force
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-update-conda: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Set up base env
        run: |
          pip install --upgrade pip
          pip install hatch hatch-conda
          hatch env create jupyterlite
      - name: Build jupyterlite
        run: |
          hatch run jupyterlite:build
      - name: Set and echo git ref
        id: vars
        run: |
          echo 'Deploying from ref ${GITHUB_REF#refs/*/}'
          echo 'tag=${GITHUB_REF#refs/*/}' >> $GITHUB_OUTPUT
      - name: upload
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'main') ||
          (github.event_name == 'push' && !(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          external_repository: pyviz-dev/panelite
          publish_dir: ./lite/dist
          cname: panelite.holoviz.org
          force_orphan: true
